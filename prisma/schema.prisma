// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextIndex", "fullTextSearch"]
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model MainSliderItem {
  id          String   @id @default(uuid())
  title       String
  description String
  isPublished Boolean  @default(false)
  imageSrc    String
  updatedAt   DateTime @updatedAt
  createdAt   DateTime @default(now())
}

model CatalogItem {
  id String @id @default(uuid())
  title String
  description String?
  Price Float?
  
  categoryId String?
  category Category? @relation(fields: [categoryId], references: [id])

  brandId String?
  brand Brand? @relation(fields: [brandId], references: [id])

  isAvailable Boolean @default(false)
  isPublished Boolean @default(false)
  // imageSrc ImageSrc[]
  imageSrc String?
  
  @@index([categoryId])
  @@index([brandId])
}

model Brand {
  id String @id @default(uuid())
  name String @unique
  items CatalogItem[]
}

model Category {
  id String @id @default(uuid())
  name String @unique
  items CatalogItem[]
}

model CarouselItem {
  id String @id @default(uuid())
  title String
  description String
  imageUrl String
  btnHref String
  position Int
}

// model InfoCard {
//   id String @id @default(uuid())
//   icon String @default("Clock")
//   label String
//   description String?
//   wideness String?
//   position Int
//   addButton Boolean @default(false)
//   btnHref String?
// }


// model ImageSrc {
//   id String @id @default(uuid())
//   imageSrc String

//   catalogItemId String

//   catalogItem CatalogItem @relation(fields: [catalogItemId], references: [id], onDelete: Cascade)

//   @@index([imageSrc])
// }
