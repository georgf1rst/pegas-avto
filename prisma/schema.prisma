generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearchPostgres"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model MainCarouselItem {
  id          String  @id @default(uuid())
  title       String
  description String?
  isPublished Boolean @default(false)
  imageUrl    String?
  btnHref     String?
  position    Int     @default(10)
}

model CatalogItem {
  id          String  @id @default(uuid())
  title       String
  description String? @db.Text
  Price       Float?

  categoryId String?
  category   Category? @relation(fields: [categoryId], references: [id])

  brandId String?
  brand   Brand?  @relation(fields: [brandId], references: [id])

  isAvailable Boolean @default(false)
  isPublished Boolean @default(false)

  imageSrcs ImageSrcMultiple[]

  // imageSrc String?
  @@index([categoryId])
  @@index([brandId])
}

model ImageSrcMultiple {
  id String @id @default(uuid())

  imageSrc String?
  position Int

  name String

  itemId String
  item   CatalogItem @relation(fields: [itemId], references: [id], onDelete: Cascade)

  @@index([itemId])
}

model Brand {
  id    String        @id @default(uuid())
  name  String        @unique
  items CatalogItem[]
}

model Category {
  id          String        @id @default(uuid())
  name        String        @unique
  imageSrc    String?
  webRef      String?       @unique
  isPublished Boolean       @default(false)
  items       CatalogItem[]
  categoryParams CategoryParam[]
}

model CategoryParam {
  id String @id @default(uuid())

  name String
  value String

  categoryId String
  category Category @relation(fields: [categoryId], references: [id], onDelete: Cascade)

  @@index([categoryId])
}

model Appointment {
  id     String   @id @default(uuid())
  name   String?
  phone  String
  car    String?
  amount Int      @default(0)
  fullPrice   Int        @default(0)
  total  Int      @default(5000)
  date   DateTime @default(now())
}

model ServiceItem {
  id          String  @id @default(uuid())
  title       String
  description String? @db.Text
  moreDescription String? @db.Text
  price       Float?

  imageSrc    String?

  isPublished Boolean @default(false)
}